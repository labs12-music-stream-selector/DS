# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-05-16 06:17
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(blank=True, max_length=11, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('moods', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NewVideo',
            fields=[
                ('video_title', models.TextField(blank=True, db_index=True, null=True, unique=True)),
                ('video_id', models.CharField(blank=True, max_length=11, primary_key=True, serialize=False)),
                ('moods', models.CharField(choices=[('HAPPY', 'Happy'), ('IN-LOVE', 'In-Love'), ('SAD', 'Sad'), ('CONFIDENT-SASSY', 'Confident-sassy'), ('CHILL', 'Chill'), ('ANGRY', 'Angry')], default='HAPPY', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='NewVideoStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(blank=True, max_length=11, null=True)),
                ('video_view_count', models.CharField(blank=True, max_length=15, null=True)),
                ('video_favorite_count', models.CharField(blank=True, max_length=15, null=True)),
                ('video_comment_count', models.CharField(blank=True, max_length=15, null=True)),
                ('new_video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='songs.NewVideo')),
            ],
        ),
        migrations.CreateModel(
            name='NewVideoTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topics', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('songs', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('video_id', models.CharField(blank=True, max_length=11, null=True)),
                ('song_embed_code', models.TextField(blank=True, null=True)),
                ('mood', models.CharField(blank=True, max_length=20, null=True)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('recommendation_one', models.CharField(blank=True, max_length=140, null=True)),
                ('recommendation_one_link', models.URLField(blank=True, null=True)),
                ('recommendation_one_embed_code', models.TextField(blank=True, null=True)),
                ('recommendation_two', models.CharField(blank=True, max_length=140, null=True)),
                ('recommendation_two_link', models.URLField(blank=True, null=True)),
                ('recommendation_two_embed_code', models.TextField(blank=True, null=True)),
                ('recommendation_three', models.CharField(blank=True, max_length=140, null=True)),
                ('recommendation_three_link', models.URLField(blank=True, null=True)),
                ('recommendation_three_embed_code', models.TextField(blank=True, null=True)),
                ('recommendation_four', models.CharField(blank=True, max_length=140, null=True)),
                ('recommendation_four_link', models.URLField(blank=True, null=True)),
                ('recommendation_four_embed_code', models.TextField(blank=True, null=True)),
                ('recommendation_five', models.CharField(blank=True, max_length=140, null=True)),
                ('recommendation_five_link', models.URLField(blank=True, null=True)),
                ('recommendation_five_embed_code', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='song',
            name='api_tags',
            field=models.ManyToManyField(to='songs.Tag'),
        ),
        migrations.AddField(
            model_name='song',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='newvideo',
            name='new_video_tags',
            field=models.ManyToManyField(to='songs.NewVideoTag'),
        ),
    ]
